#ifndef _CkMailMan_H
#define _CkMailMan_H
#include "Chilkat_C.h"

HCkMailMan CkMailMan_Create(void);
void CkMailMan_Dispose(HCkMailMan handle);
BOOL CkMailMan_getAllOrNone(HCkMailMan handle);
void CkMailMan_putAllOrNone(HCkMailMan handle, BOOL newVal);
BOOL CkMailMan_getAutoGenMessageId(HCkMailMan handle);
void CkMailMan_putAutoGenMessageId(HCkMailMan handle, BOOL newVal);
BOOL CkMailMan_getAutoSaveCerts(HCkMailMan handle);
void CkMailMan_putAutoSaveCerts(HCkMailMan handle, BOOL newVal);
BOOL CkMailMan_getAutoUnwrapSecurity(HCkMailMan handle);
void CkMailMan_putAutoUnwrapSecurity(HCkMailMan handle, BOOL newVal);
void CkMailMan_getClientIpAddress(HCkMailMan handle, HCkString retval);
void CkMailMan_putClientIpAddress(HCkMailMan handle, const char *newVal);
long CkMailMan_getConnectTimeout(HCkMailMan handle);
void CkMailMan_putConnectTimeout(HCkMailMan handle, long newVal);
void CkMailMan_getDsnEnvid(HCkMailMan handle, HCkString retval);
void CkMailMan_putDsnEnvid(HCkMailMan handle, const char *newVal);
void CkMailMan_getDsnNotify(HCkMailMan handle, HCkString retval);
void CkMailMan_putDsnNotify(HCkMailMan handle, const char *newVal);
void CkMailMan_getDsnRet(HCkMailMan handle, HCkString retval);
void CkMailMan_putDsnRet(HCkMailMan handle, const char *newVal);
BOOL CkMailMan_getEmbedCertChain(HCkMailMan handle);
void CkMailMan_putEmbedCertChain(HCkMailMan handle, BOOL newVal);
void CkMailMan_getFilter(HCkMailMan handle, HCkString retval);
void CkMailMan_putFilter(HCkMailMan handle, const char *newVal);
long CkMailMan_getHeartbeatMs(HCkMailMan handle);
void CkMailMan_putHeartbeatMs(HCkMailMan handle, long newVal);
void CkMailMan_getHeloHostname(HCkMailMan handle, HCkString retval);
void CkMailMan_putHeloHostname(HCkMailMan handle, const char *newVal);
BOOL CkMailMan_getImmediateDelete(HCkMailMan handle);
void CkMailMan_putImmediateDelete(HCkMailMan handle, BOOL newVal);
BOOL CkMailMan_getIncludeRootCert(HCkMailMan handle);
void CkMailMan_putIncludeRootCert(HCkMailMan handle, BOOL newVal);
void CkMailMan_getLastErrorHtml(HCkMailMan handle, HCkString retval);
void CkMailMan_getLastErrorText(HCkMailMan handle, HCkString retval);
void CkMailMan_getLastErrorXml(HCkMailMan handle, HCkString retval);
void CkMailMan_getLastSendQFilename(HCkMailMan handle, HCkString retval);
long CkMailMan_getLastSmtpStatus(HCkMailMan handle);
void CkMailMan_getLogMailReceivedFilename(HCkMailMan handle, HCkString retval);
void CkMailMan_putLogMailReceivedFilename(HCkMailMan handle, const char *newVal);
void CkMailMan_getLogMailSentFilename(HCkMailMan handle, HCkString retval);
void CkMailMan_putLogMailSentFilename(HCkMailMan handle, const char *newVal);
void CkMailMan_getMailHost(HCkMailMan handle, HCkString retval);
void CkMailMan_putMailHost(HCkMailMan handle, const char *newVal);
long CkMailMan_getMailPort(HCkMailMan handle);
void CkMailMan_putMailPort(HCkMailMan handle, long newVal);
long CkMailMan_getMaxCount(HCkMailMan handle);
void CkMailMan_putMaxCount(HCkMailMan handle, long newVal);
BOOL CkMailMan_getOpaqueSigning(HCkMailMan handle);
void CkMailMan_putOpaqueSigning(HCkMailMan handle, BOOL newVal);
BOOL CkMailMan_getPop3SPA(HCkMailMan handle);
void CkMailMan_putPop3SPA(HCkMailMan handle, BOOL newVal);
int CkMailMan_getPop3SessionId(HCkMailMan handle);
void CkMailMan_getPop3SessionLog(HCkMailMan handle, HCkString retval);
BOOL CkMailMan_getPop3SslServerCertVerified(HCkMailMan handle);
void CkMailMan_getPopPassword(HCkMailMan handle, HCkString retval);
void CkMailMan_putPopPassword(HCkMailMan handle, const char *newVal);
void CkMailMan_putPopPasswordBase64(HCkMailMan handle, const char *newVal);
BOOL CkMailMan_getPopSsl(HCkMailMan handle);
void CkMailMan_putPopSsl(HCkMailMan handle, BOOL newVal);
void CkMailMan_getPopUsername(HCkMailMan handle, HCkString retval);
void CkMailMan_putPopUsername(HCkMailMan handle, const char *newVal);
long CkMailMan_getReadTimeout(HCkMailMan handle);
void CkMailMan_putReadTimeout(HCkMailMan handle, long newVal);
BOOL CkMailMan_getResetDateOnLoad(HCkMailMan handle);
void CkMailMan_putResetDateOnLoad(HCkMailMan handle, BOOL newVal);
int CkMailMan_getSendBufferSize(HCkMailMan handle);
void CkMailMan_putSendBufferSize(HCkMailMan handle, int newVal);
BOOL CkMailMan_getSendIndividual(HCkMailMan handle);
void CkMailMan_putSendIndividual(HCkMailMan handle, BOOL newVal);
long CkMailMan_getSizeLimit(HCkMailMan handle);
void CkMailMan_putSizeLimit(HCkMailMan handle, long newVal);
void CkMailMan_getSmtpAuthMethod(HCkMailMan handle, HCkString retval);
void CkMailMan_putSmtpAuthMethod(HCkMailMan handle, const char *newVal);
void CkMailMan_getSmtpHost(HCkMailMan handle, HCkString retval);
void CkMailMan_putSmtpHost(HCkMailMan handle, const char *newVal);
void CkMailMan_getSmtpLoginDomain(HCkMailMan handle, HCkString retval);
void CkMailMan_putSmtpLoginDomain(HCkMailMan handle, const char *newVal);
void CkMailMan_getSmtpPassword(HCkMailMan handle, HCkString retval);
void CkMailMan_putSmtpPassword(HCkMailMan handle, const char *newVal);
long CkMailMan_getSmtpPort(HCkMailMan handle);
void CkMailMan_putSmtpPort(HCkMailMan handle, long newVal);
void CkMailMan_getSmtpSessionLog(HCkMailMan handle, HCkString retval);
BOOL CkMailMan_getSmtpSsl(HCkMailMan handle);
void CkMailMan_putSmtpSsl(HCkMailMan handle, BOOL newVal);
BOOL CkMailMan_getSmtpSslServerCertVerified(HCkMailMan handle);
void CkMailMan_getSmtpUsername(HCkMailMan handle, HCkString retval);
void CkMailMan_putSmtpUsername(HCkMailMan handle, const char *newVal);
void CkMailMan_getSocksHostname(HCkMailMan handle, HCkString retval);
void CkMailMan_putSocksHostname(HCkMailMan handle, const char *newVal);
void CkMailMan_getSocksPassword(HCkMailMan handle, HCkString retval);
void CkMailMan_putSocksPassword(HCkMailMan handle, const char *newVal);
int CkMailMan_getSocksPort(HCkMailMan handle);
void CkMailMan_putSocksPort(HCkMailMan handle, int newVal);
void CkMailMan_getSocksUsername(HCkMailMan handle, HCkString retval);
void CkMailMan_putSocksUsername(HCkMailMan handle, const char *newVal);
int CkMailMan_getSocksVersion(HCkMailMan handle);
void CkMailMan_putSocksVersion(HCkMailMan handle, int newVal);
BOOL CkMailMan_getStartTLS(HCkMailMan handle);
void CkMailMan_putStartTLS(HCkMailMan handle, BOOL newVal);
BOOL CkMailMan_getUtf8(HCkMailMan handle);
void CkMailMan_putUtf8(HCkMailMan handle, BOOL newVal);
void CkMailMan_getVersion(HCkMailMan handle, HCkString retval);
long CkMailMan_CheckMail(HCkMailMan handle);
void CkMailMan_ClearBadEmailAddresses(HCkMailMan handle);
void CkMailMan_ClearPop3SessionLog(HCkMailMan handle);
void CkMailMan_ClearSmtpSessionLog(HCkMailMan handle);
BOOL CkMailMan_CloseSmtpConnection(HCkMailMan handle);
HCkEmailBundle CkMailMan_CopyMail(HCkMailMan handle);
BOOL CkMailMan_DeleteBundle(HCkMailMan handle, HCkEmailBundle bundle);
BOOL CkMailMan_DeleteByMsgnum(HCkMailMan handle, int msgnum);
BOOL CkMailMan_DeleteByUidl(HCkMailMan handle, const char *uidl);
BOOL CkMailMan_DeleteEmail(HCkMailMan handle, HCkEmail email);
BOOL CkMailMan_DeleteMultiple(HCkMailMan handle, HCkStringArray uidlArray);
HCkEmail CkMailMan_FetchByMsgnum(HCkMailMan handle, int msgnum);
HCkEmail CkMailMan_FetchEmail(HCkMailMan handle, const char *uidl);
BOOL CkMailMan_FetchMime(HCkMailMan handle, const char *uidl, HCkByteData mimeBytes);
BOOL CkMailMan_FetchMimeByMsgnum(HCkMailMan handle, int msgnum, HCkByteData outBytes);
HCkEmailBundle CkMailMan_FetchMultiple(HCkMailMan handle, HCkStringArray uidlArray);
HCkEmailBundle CkMailMan_FetchMultipleHeaders(HCkMailMan handle, HCkStringArray uidlArray, long numBodyLines);
HCkStringArray CkMailMan_FetchMultipleMime(HCkMailMan handle, HCkStringArray uidlArray);
HCkEmail CkMailMan_FetchSingleHeader(HCkMailMan handle, long numBodyLines, long index);
HCkEmail CkMailMan_FetchSingleHeaderByUidl(HCkMailMan handle, long numBodyLines, const char *uidl);
HCkEmailBundle CkMailMan_GetAllHeaders(HCkMailMan handle, long numBodyLines);
HCkStringArray CkMailMan_GetBadEmailAddresses(HCkMailMan handle);
HCkEmail CkMailMan_GetFullEmail(HCkMailMan handle, HCkEmail email);
HCkEmailBundle CkMailMan_GetHeaders(HCkMailMan handle, long numBodyLines, long fromIndex, long toIndex);
int CkMailMan_GetMailboxCount(HCkMailMan handle);
BOOL CkMailMan_GetMailboxInfoXml(HCkMailMan handle, HCkString xml);
unsigned long CkMailMan_GetMailboxSize(HCkMailMan handle);
HCkCert CkMailMan_GetPop3SslServerCert(HCkMailMan handle);
int CkMailMan_GetSizeByUidl(HCkMailMan handle, const char *uidl);
HCkCert CkMailMan_GetSmtpSslServerCert(HCkMailMan handle);
HCkStringArray CkMailMan_GetUidls(HCkMailMan handle);
BOOL CkMailMan_IsSmtpDsnCapable(HCkMailMan handle);
BOOL CkMailMan_IsUnlocked(HCkMailMan handle);
HCkEmail CkMailMan_LoadEml(HCkMailMan handle, const char *emlFilename);
HCkEmailBundle CkMailMan_LoadMbx(HCkMailMan handle, const char *mbxFileName);
HCkEmail CkMailMan_LoadMime(HCkMailMan handle, const char *mimeText);
HCkEmail CkMailMan_LoadXmlEmail(HCkMailMan handle, const char *folderPath);
HCkEmail CkMailMan_LoadXmlEmailString(HCkMailMan handle, const char *xmlString);
HCkEmailBundle CkMailMan_LoadXmlFile(HCkMailMan handle, const char *folderPath);
HCkEmailBundle CkMailMan_LoadXmlString(HCkMailMan handle, const char *xmlString);
BOOL CkMailMan_MxLookup(HCkMailMan handle, const char *emailAddr, HCkString strHostname);
HCkStringArray CkMailMan_MxLookupAll(HCkMailMan handle, const char *emailAddress);
BOOL CkMailMan_OpenSmtpConnection(HCkMailMan handle);
BOOL CkMailMan_Pop3BeginSession(HCkMailMan handle);
BOOL CkMailMan_Pop3EndSession(HCkMailMan handle);
BOOL CkMailMan_Pop3Noop(HCkMailMan handle);
BOOL CkMailMan_Pop3Reset(HCkMailMan handle);
BOOL CkMailMan_QuickSend(HCkMailMan handle, const char *from, const char *to, const char *subject, const char *body, const char *smtpServer);
BOOL CkMailMan_RenderToMime(HCkMailMan handle, HCkEmail email, HCkString str);
BOOL CkMailMan_SaveLastError(HCkMailMan handle, const char *filename);
BOOL CkMailMan_SendBundle(HCkMailMan handle, HCkEmailBundle bundle);
BOOL CkMailMan_SendEmail(HCkMailMan handle, HCkEmail email);
BOOL CkMailMan_SendMime(HCkMailMan handle, const char *from, const char *recipients, const char *mimeMsg);
BOOL CkMailMan_SendMimeQ(HCkMailMan handle, const char *from, const char *recipients, const char *mimeMsg);
BOOL CkMailMan_SendMimeToList(HCkMailMan handle, const char *from, const char *distListFile, const char *mimeText);
BOOL CkMailMan_SendQ(HCkMailMan handle, HCkEmail email);
BOOL CkMailMan_SendQ2(HCkMailMan handle, HCkEmail email, const char *queueDir);
BOOL CkMailMan_SendToDistributionList(HCkMailMan handle, HCkEmail email, HCkStringArray array);
BOOL CkMailMan_SetDecryptCert2(HCkMailMan handle, HCkCert cert, HCkPrivateKey key);
void CkMailMan_SetSslClientCert(HCkMailMan handle, HCkCert cert);
BOOL CkMailMan_SmtpNoop(HCkMailMan handle);
BOOL CkMailMan_SmtpReset(HCkMailMan handle);
BOOL CkMailMan_SshAuthenticatePk(HCkMailMan handle, BOOL bSmtp, const char *sshLogin, HCkSshKey privateKey);
BOOL CkMailMan_SshAuthenticatePw(HCkMailMan handle, BOOL bSmtp, const char *sshLogin, const char *sshPassword);
BOOL CkMailMan_SshCloseTunnel(HCkMailMan handle, BOOL bSmtp);
BOOL CkMailMan_SshTunnel(HCkMailMan handle, BOOL bSmtp, const char *sshServerHostname, int sshServerPort);
HCkEmailBundle CkMailMan_TransferMail(HCkMailMan handle);
HCkStringArray CkMailMan_TransferMultipleMime(HCkMailMan handle, HCkStringArray uidlArray);
BOOL CkMailMan_UnlockComponent(HCkMailMan handle, const char *code);
BOOL CkMailMan_VerifyPopConnection(HCkMailMan handle);
BOOL CkMailMan_VerifyPopLogin(HCkMailMan handle);
BOOL CkMailMan_VerifyRecipients(HCkMailMan handle, HCkEmail email, HCkStringArray saBadAddrs);
BOOL CkMailMan_VerifySmtpConnection(HCkMailMan handle);
BOOL CkMailMan_VerifySmtpLogin(HCkMailMan handle);
const char *CkMailMan_clientIpAddress(HCkMailMan handle);
const char *CkMailMan_dsnEnvid(HCkMailMan handle);
const char *CkMailMan_dsnNotify(HCkMailMan handle);
const char *CkMailMan_dsnRet(HCkMailMan handle);
const char *CkMailMan_filter(HCkMailMan handle);
const char *CkMailMan_getMailboxInfoXml(HCkMailMan handle);
const char *CkMailMan_heloHostname(HCkMailMan handle);
const char *CkMailMan_lastErrorHtml(HCkMailMan handle);
const char *CkMailMan_lastErrorText(HCkMailMan handle);
const char *CkMailMan_lastErrorXml(HCkMailMan handle);
const char *CkMailMan_lastSendQFilename(HCkMailMan handle);
const char *CkMailMan_logMailReceivedFilename(HCkMailMan handle);
const char *CkMailMan_logMailSentFilename(HCkMailMan handle);
const char *CkMailMan_mailHost(HCkMailMan handle);
const char *CkMailMan_mxLookup(HCkMailMan handle, const char *emailAddr);
const char *CkMailMan_pop3SessionLog(HCkMailMan handle);
const char *CkMailMan_popPassword(HCkMailMan handle);
const char *CkMailMan_popUsername(HCkMailMan handle);
const char *CkMailMan_renderToMime(HCkMailMan handle, HCkEmail email);
const char *CkMailMan_smtpAuthMethod(HCkMailMan handle);
const char *CkMailMan_smtpHost(HCkMailMan handle);
const char *CkMailMan_smtpLoginDomain(HCkMailMan handle);
const char *CkMailMan_smtpPassword(HCkMailMan handle);
const char *CkMailMan_smtpSessionLog(HCkMailMan handle);
const char *CkMailMan_smtpUsername(HCkMailMan handle);
const char *CkMailMan_socksHostname(HCkMailMan handle);
const char *CkMailMan_socksPassword(HCkMailMan handle);
const char *CkMailMan_socksUsername(HCkMailMan handle);
const char *CkMailMan_version(HCkMailMan handle);
#endif
