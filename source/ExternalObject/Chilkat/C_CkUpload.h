#ifndef _CkUpload_H
#define _CkUpload_H
#include "Chilkat_C.h"

HCkUpload CkUpload_Create(void);
void CkUpload_Dispose(HCkUpload handle);
int CkUpload_getChunkSize(HCkUpload handle);
void CkUpload_putChunkSize(HCkUpload handle, int newVal);
void CkUpload_getHostname(HCkUpload handle, HCkString retval);
void CkUpload_putHostname(HCkUpload handle, const char *newVal);
int CkUpload_getIdleTimeoutMs(HCkUpload handle);
void CkUpload_putIdleTimeoutMs(HCkUpload handle, int newVal);
void CkUpload_getLastErrorHtml(HCkUpload handle, HCkString retval);
void CkUpload_getLastErrorText(HCkUpload handle, HCkString retval);
void CkUpload_getLastErrorXml(HCkUpload handle, HCkString retval);
void CkUpload_getLogin(HCkUpload handle, HCkString retval);
void CkUpload_putLogin(HCkUpload handle, const char *newVal);
unsigned long CkUpload_getNumBytesSent(HCkUpload handle);
void CkUpload_getPassword(HCkUpload handle, HCkString retval);
void CkUpload_putPassword(HCkUpload handle, const char *newVal);
void CkUpload_getPath(HCkUpload handle, HCkString retval);
void CkUpload_putPath(HCkUpload handle, const char *newVal);
unsigned long CkUpload_getPercentUploaded(HCkUpload handle);
int CkUpload_getPort(HCkUpload handle);
void CkUpload_putPort(HCkUpload handle, int newVal);
void CkUpload_getProxyDomain(HCkUpload handle, HCkString retval);
void CkUpload_putProxyDomain(HCkUpload handle, const char *newVal);
void CkUpload_getProxyLogin(HCkUpload handle, HCkString retval);
void CkUpload_putProxyLogin(HCkUpload handle, const char *newVal);
void CkUpload_getProxyPassword(HCkUpload handle, HCkString retval);
void CkUpload_putProxyPassword(HCkUpload handle, const char *newVal);
long CkUpload_getProxyPort(HCkUpload handle);
void CkUpload_putProxyPort(HCkUpload handle, long newVal);
void CkUpload_getResponseBody(HCkUpload handle, HCkByteData retval);
void CkUpload_getResponseHeader(HCkUpload handle, HCkString retval);
int CkUpload_getResponseStatus(HCkUpload handle);
BOOL CkUpload_getSsl(HCkUpload handle);
void CkUpload_putSsl(HCkUpload handle, BOOL newVal);
unsigned long CkUpload_getTotalUploadSize(HCkUpload handle);
BOOL CkUpload_getUploadInProgress(HCkUpload handle);
BOOL CkUpload_getUploadSuccess(HCkUpload handle);
BOOL CkUpload_getUtf8(HCkUpload handle);
void CkUpload_putUtf8(HCkUpload handle, BOOL newVal);
void CkUpload_getVersion(HCkUpload handle, HCkString retval);
void CkUpload_AddCustomHeader(HCkUpload handle, const char *name, const char *value);
void CkUpload_AddFileReference(HCkUpload handle, const char *name, const char *filename);
void CkUpload_AddParam(HCkUpload handle, const char *name, const char *value);
BOOL CkUpload_BlockingUpload(HCkUpload handle);
BOOL CkUpload_SaveLastError(HCkUpload handle, const char *filename);
void CkUpload_SleepMs(HCkUpload handle, int millisec);
BOOL CkUpload_UploadToMemory(HCkUpload handle, HCkByteData dataBuf);
const char *CkUpload_hostname(HCkUpload handle);
const char *CkUpload_lastErrorHtml(HCkUpload handle);
const char *CkUpload_lastErrorText(HCkUpload handle);
const char *CkUpload_lastErrorXml(HCkUpload handle);
const char *CkUpload_login(HCkUpload handle);
const char *CkUpload_password(HCkUpload handle);
const char *CkUpload_path(HCkUpload handle);
const char *CkUpload_proxyDomain(HCkUpload handle);
const char *CkUpload_proxyLogin(HCkUpload handle);
const char *CkUpload_proxyPassword(HCkUpload handle);
const char *CkUpload_responseHeader(HCkUpload handle);
const char *CkUpload_version(HCkUpload handle);
#endif
