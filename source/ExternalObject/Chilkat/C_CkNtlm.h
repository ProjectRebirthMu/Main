#ifndef _CkNtlm_H
#define _CkNtlm_H
#include "Chilkat_C.h"

HCkNtlm CkNtlm_Create(void);
void CkNtlm_Dispose(HCkNtlm handle);
void CkNtlm_getClientChallenge(HCkNtlm handle, HCkString retval);
void CkNtlm_putClientChallenge(HCkNtlm handle, const char *newVal);
void CkNtlm_getDnsComputerName(HCkNtlm handle, HCkString retval);
void CkNtlm_putDnsComputerName(HCkNtlm handle, const char *newVal);
void CkNtlm_getDnsDomainName(HCkNtlm handle, HCkString retval);
void CkNtlm_putDnsDomainName(HCkNtlm handle, const char *newVal);
void CkNtlm_getDomain(HCkNtlm handle, HCkString retval);
void CkNtlm_putDomain(HCkNtlm handle, const char *newVal);
void CkNtlm_getEncodingMode(HCkNtlm handle, HCkString retval);
void CkNtlm_putEncodingMode(HCkNtlm handle, const char *newVal);
void CkNtlm_getFlags(HCkNtlm handle, HCkString retval);
void CkNtlm_putFlags(HCkNtlm handle, const char *newVal);
void CkNtlm_getLastErrorHtml(HCkNtlm handle, HCkString retval);
void CkNtlm_getLastErrorText(HCkNtlm handle, HCkString retval);
void CkNtlm_getLastErrorXml(HCkNtlm handle, HCkString retval);
void CkNtlm_getNetBiosComputerName(HCkNtlm handle, HCkString retval);
void CkNtlm_putNetBiosComputerName(HCkNtlm handle, const char *newVal);
void CkNtlm_getNetBiosDomainName(HCkNtlm handle, HCkString retval);
void CkNtlm_putNetBiosDomainName(HCkNtlm handle, const char *newVal);
int CkNtlm_getNtlmVersion(HCkNtlm handle);
void CkNtlm_putNtlmVersion(HCkNtlm handle, int newVal);
int CkNtlm_getOemCodePage(HCkNtlm handle);
void CkNtlm_putOemCodePage(HCkNtlm handle, int newVal);
void CkNtlm_getPassword(HCkNtlm handle, HCkString retval);
void CkNtlm_putPassword(HCkNtlm handle, const char *newVal);
void CkNtlm_getServerChallenge(HCkNtlm handle, HCkString retval);
void CkNtlm_putServerChallenge(HCkNtlm handle, const char *newVal);
void CkNtlm_getTargetName(HCkNtlm handle, HCkString retval);
void CkNtlm_putTargetName(HCkNtlm handle, const char *newVal);
void CkNtlm_getUserName(HCkNtlm handle, HCkString retval);
void CkNtlm_putUserName(HCkNtlm handle, const char *newVal);
BOOL CkNtlm_getUtf8(HCkNtlm handle);
void CkNtlm_putUtf8(HCkNtlm handle, BOOL newVal);
void CkNtlm_getWorkstation(HCkNtlm handle, HCkString retval);
void CkNtlm_putWorkstation(HCkNtlm handle, const char *newVal);
BOOL CkNtlm_GenType1(HCkNtlm handle, HCkString outStr);
BOOL CkNtlm_GenType2(HCkNtlm handle, const char *type1Msg, HCkString outStr);
BOOL CkNtlm_GenType3(HCkNtlm handle, const char *type2Msg, HCkString outStr);
BOOL CkNtlm_ParseType1(HCkNtlm handle, const char *type1Msg, HCkString outStr);
BOOL CkNtlm_ParseType2(HCkNtlm handle, const char *type2Msg, HCkString outStr);
BOOL CkNtlm_ParseType3(HCkNtlm handle, const char *type3Msg, HCkString outStr);
BOOL CkNtlm_SaveLastError(HCkNtlm handle, const char *filename);
BOOL CkNtlm_SetFlag(HCkNtlm handle, const char *flagLetter, BOOL on);
BOOL CkNtlm_UnlockComponent(HCkNtlm handle, const char *unlockCode);
const char *CkNtlm_clientChallenge(HCkNtlm handle);
const char *CkNtlm_dnsComputerName(HCkNtlm handle);
const char *CkNtlm_dnsDomainName(HCkNtlm handle);
const char *CkNtlm_domain(HCkNtlm handle);
const char *CkNtlm_encodingMode(HCkNtlm handle);
const char *CkNtlm_flags(HCkNtlm handle);
const char *CkNtlm_genType1(HCkNtlm handle);
const char *CkNtlm_genType2(HCkNtlm handle, const char *type1Msg);
const char *CkNtlm_genType3(HCkNtlm handle, const char *type2Msg);
const char *CkNtlm_lastErrorHtml(HCkNtlm handle);
const char *CkNtlm_lastErrorText(HCkNtlm handle);
const char *CkNtlm_lastErrorXml(HCkNtlm handle);
const char *CkNtlm_netBiosComputerName(HCkNtlm handle);
const char *CkNtlm_netBiosDomainName(HCkNtlm handle);
const char *CkNtlm_parseType1(HCkNtlm handle, const char *type1Msg);
const char *CkNtlm_parseType2(HCkNtlm handle, const char *type2Msg);
const char *CkNtlm_parseType3(HCkNtlm handle, const char *type3Msg);
const char *CkNtlm_password(HCkNtlm handle);
const char *CkNtlm_serverChallenge(HCkNtlm handle);
const char *CkNtlm_targetName(HCkNtlm handle);
const char *CkNtlm_userName(HCkNtlm handle);
const char *CkNtlm_workstation(HCkNtlm handle);
#endif
