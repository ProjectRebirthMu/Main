#ifndef _CkCharset_H
#define _CkCharset_H
#include "Chilkat_C.h"

HCkCharset CkCharset_Create(void);
void CkCharset_Dispose(HCkCharset handle);
void CkCharset_getAltToCharset(HCkCharset handle, HCkString retval);
void CkCharset_putAltToCharset(HCkCharset handle, const char *newVal);
int CkCharset_getErrorAction(HCkCharset handle);
void CkCharset_putErrorAction(HCkCharset handle, int newVal);
void CkCharset_getFromCharset(HCkCharset handle, HCkString retval);
void CkCharset_putFromCharset(HCkCharset handle, const char *newVal);
void CkCharset_getLastErrorHtml(HCkCharset handle, HCkString retval);
void CkCharset_getLastErrorText(HCkCharset handle, HCkString retval);
void CkCharset_getLastErrorXml(HCkCharset handle, HCkString retval);
void CkCharset_getLastInputAsHex(HCkCharset handle, HCkString retval);
void CkCharset_getLastInputAsQP(HCkCharset handle, HCkString retval);
void CkCharset_getLastOutputAsHex(HCkCharset handle, HCkString retval);
void CkCharset_getLastOutputAsQP(HCkCharset handle, HCkString retval);
BOOL CkCharset_getSaveLast(HCkCharset handle);
void CkCharset_putSaveLast(HCkCharset handle, BOOL newVal);
void CkCharset_getToCharset(HCkCharset handle, HCkString retval);
void CkCharset_putToCharset(HCkCharset handle, const char *newVal);
BOOL CkCharset_getUtf8(HCkCharset handle);
void CkCharset_putUtf8(HCkCharset handle, BOOL newVal);
void CkCharset_getVersion(HCkCharset handle, HCkString retval);
int CkCharset_CharsetToCodePage(HCkCharset handle, const char *charsetName);
BOOL CkCharset_CodePageToCharset(HCkCharset handle, int codePage, HCkString sCharset);
BOOL CkCharset_ConvertData(HCkCharset handle, HCkByteData inData, HCkByteData outData);
BOOL CkCharset_ConvertData2(HCkCharset handle, const unsigned char *inData, unsigned long inDataLen, HCkByteData outData);
BOOL CkCharset_ConvertData3(HCkCharset handle, const unsigned char *inData, unsigned long inDataLen, unsigned char *outData, unsigned long *outDataLen);
BOOL CkCharset_ConvertFile(HCkCharset handle, const char *inFilename, const char *outFilename);
BOOL CkCharset_ConvertFromUnicode(HCkCharset handle, HCkByteData uniData, HCkByteData mbData);
BOOL CkCharset_ConvertFromUnicode2(HCkCharset handle, const unsigned char *data, unsigned long dataLen, HCkByteData mbData);
BOOL CkCharset_ConvertHtml(HCkCharset handle, HCkByteData htmlIn, HCkByteData htmlOut);
BOOL CkCharset_ConvertHtml2(HCkCharset handle, const unsigned char *htmlIn, unsigned long htmlInLen, HCkByteData htmlOut);
BOOL CkCharset_ConvertHtmlFile(HCkCharset handle, const char *inFilename, const char *outFilename);
BOOL CkCharset_ConvertToUnicode(HCkCharset handle, HCkByteData mbData, HCkByteData uniData);
BOOL CkCharset_ConvertToUnicode2(HCkCharset handle, const unsigned char *data, unsigned long dataLen, HCkByteData uniData);
void CkCharset_EntityEncodeDec(HCkCharset handle, const char *inStr, HCkString outStr);
void CkCharset_EntityEncodeHex(HCkCharset handle, const char *inStr, HCkString outStr);
BOOL CkCharset_GetHtmlCharset(HCkCharset handle, HCkByteData htmlData, HCkString strCharset);
BOOL CkCharset_GetHtmlCharset2(HCkCharset handle, const unsigned char *htmlData, unsigned long htmlDataLen, HCkString strCharset);
BOOL CkCharset_GetHtmlFileCharset(HCkCharset handle, const char *htmlFilename, HCkString strCharset);
BOOL CkCharset_HtmlDecodeToStr(HCkCharset handle, const char *str, HCkString strOut);
BOOL CkCharset_HtmlEntityDecode(HCkCharset handle, HCkByteData inData, HCkByteData outData);
BOOL CkCharset_HtmlEntityDecodeFile(HCkCharset handle, const char *inFilename, const char *outFilename);
BOOL CkCharset_IsUnlocked(HCkCharset handle);
void CkCharset_LowerCase(HCkCharset handle, const char *inStr, HCkString outStr);
BOOL CkCharset_ReadFile(HCkCharset handle, const char *filename, HCkByteData dataBuf);
BOOL CkCharset_SaveLastError(HCkCharset handle, const char *filename);
void CkCharset_SetErrorBytes(HCkCharset handle, const unsigned char *data, unsigned long dataLen);
void CkCharset_SetErrorString(HCkCharset handle, const char *str);
BOOL CkCharset_UnlockComponent(HCkCharset handle, const char *unlockCode);
void CkCharset_UpperCase(HCkCharset handle, const char *inStr, HCkString outStr);
BOOL CkCharset_VerifyData(HCkCharset handle, const char *charset, HCkByteData charData);
BOOL CkCharset_VerifyFile(HCkCharset handle, const char *charset, const char *filename);
BOOL CkCharset_WriteFile2(HCkCharset handle, const char *filename, HCkByteData dataBuf);
BOOL CkCharset_WriteFile(HCkCharset handle, const char *filename, const unsigned char *data, unsigned long dataLen);
const char *CkCharset_altToCharset(HCkCharset handle);
const char *CkCharset_codePageToCharset(HCkCharset handle, int codePage);
const char *CkCharset_entityEncodeDec(HCkCharset handle, const char *inStr);
const char *CkCharset_entityEncodeHex(HCkCharset handle, const char *inStr);
const char *CkCharset_fromCharset(HCkCharset handle);
const char *CkCharset_getHtmlCharset(HCkCharset handle, HCkByteData htmlData);
const char *CkCharset_getHtmlCharset2(HCkCharset handle, const unsigned char *htmlData, unsigned long htmlDataLen);
const char *CkCharset_getHtmlFileCharset(HCkCharset handle, const char *htmlFilename);
const char *CkCharset_htmlDecodeToStr(HCkCharset handle, const char *str);
const char *CkCharset_lastErrorHtml(HCkCharset handle);
const char *CkCharset_lastErrorText(HCkCharset handle);
const char *CkCharset_lastErrorXml(HCkCharset handle);
const char *CkCharset_lastInputAsHex(HCkCharset handle);
const char *CkCharset_lastInputAsQP(HCkCharset handle);
const char *CkCharset_lastOutputAsHex(HCkCharset handle);
const char *CkCharset_lastOutputAsQP(HCkCharset handle);
const char *CkCharset_lowerCase(HCkCharset handle, const char *inStr);
const char *CkCharset_toCharset(HCkCharset handle);
const char *CkCharset_upperCase(HCkCharset handle, const char *inStr);
const char *CkCharset_version(HCkCharset handle);
#endif
